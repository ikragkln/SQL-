PSQL KOMUTLARI
psql -U postgres: PostgreSql'e bağlanmak için 
Kullanıcıya ait şifre girildikten sonra 'help' komutu yazarak bu bilgilere ulaşabiliriz.
Komutlar:  \copyright dağıtım koşulları için
       \h SQL komutları hakkında yardım için
       \? psql dahili komutlarının yardımı için
       \g ya da noktalı virgül:  sorguyu çalıştırmak için
       \q çıkmak için

psql -d <db-name> -U <username> -W : Direkt olarak username ve database name bilgisiyle bağlanmak için kullanılan komuttur.
-d : veritabanının ismi
-U : bağlanmak isteyen kullanıcının adı
-W : psql'in o kullanıcıya ait şifreyi sormasını sağlar

\l ya da \list : Veritabanlarını listeler.
\c dvdrental ya da  \connect dvdrental :Örnek olarak 'dvdrental' veritabanına bağlanmak için kullanılan komutlardır.
"Şu anda "dvdrental" veritabanına "postgres" kullanıcısı ile bağlısınız."Bu yazıyı gördükten sonra;
bağlanılan dvdrental veritabanında bulunan tabloları listelemek için  \dt  komutunu kullanırız.\d+ <tablo adı> tablo sütun bilgleri ve kısıtlarını gösterir.
\d <dbname>  yani \d  actor :"Actor" tablosunun detayları için bu komutu kullanırız.
Tablonun detaylarına ulaştığımızda SQL komutumuzu yazıp istediğimiz verileri ayıklayabiliriz. Komuttan sonra ; koymak önemlidir.
Yukarı aşağı tuşlarıyla önceki komutlara ulaşılabilir. 2 kez ctrl+c'ye tıklarsak yeni sorgu için dvdrental ekranına tekrar yönlendirir.

--Film tablosundan isminde (title) en az 2 tane 'a' harfi bulunan uzunluğu (length) 100'den büyük olan, replacement_cost 15'ten büyük 25'ten küçük olan ve rental_rate 2.99 a eşit olan verileri sırala.
dvdrental=# SELECT * FROM film
dvdrental-# WHERE (title ILIKE ('%a%a%')) AND (length > 100 ) AND (replacement_cost > 15 AND replacement_cost < 25 ) AND (rental_rate = 2.99);
\s filename : Komut geçmişini kaydetmek için kullanılır.
\timing : Sorgu hızını görmek için kullanılır.
\! cls : Ekranı temizler.
\q : PSQL terminal ekranından çıkmak için kullanılır. 
--https://www.postgresqltutorial.com/postgresql-administration/psql-commands/



--PSQL ile PostgreSQL'e host, port, kullanıcı adı ve veritabanı ismi ile bağlanmak için:
psql -h <host_name> -p <port_name> -U <kullanıcı_adı> <veritabanı_adı>

--Tabloda sütun ismini yanlış yazarsak sonradan değiştirmek için :ALTER TABLE users  RENAME COLUMN birtday TO birthday;
--Sonradan username UNIQUE yapmak istersek;

testdb=# SELECT * FROM users;
 id |   username    |  birthday
----+---------------+------------
  1 | elapenna0     | 2023-08-29
  2 | phamlin1      | 2024-04-02
  3 | rcrab2        | 2023-07-29
  4 | crestall3     | 2023-08-02
  5 | pdobsons4     | 2024-05-02
  6 | mneilands5    | 2023-08-17
  7 | doram6        | 2023-07-17
  8 | kglasner7     | 2023-07-28
  9 | minnman8      | 2024-02-08
 10 | ckleinbaum9   | 2024-02-11
 11 | dthoumasa     | 2023-11-07
 12 | gmedwellb     | 2024-04-08
 13 | uhuffeyc      | 2024-03-15
 14 | bianned       | 2024-02-16
 15 | rhalliwelle   | 2024-02-23
 16 | mquinnellyf   | 2024-01-06
 17 | apatterfieldg | 2023-10-10
 18 | hvidoh        | 2024-04-05
 19 | tleaki        | 2023-08-13
 20 | lcrepelj      | 2023-10-01
 21 | cfaulok       | 2023-11-25
 22 | rferrimanl    | 2023-10-13
 23 | rwinsorm      | 2023-12-11
 24 | jhallenn      | 2024-03-29
 25 | mnewbando     | 2024-01-22
 26 | rwolpertp     | 2023-10-21
^CCancel request sent

-----------Denemek için username aynı 2 veri girdik.---------
testdb=# insert into users (id, username, birthday) values (51, 'ddimaria1d', '2024-04-22');
INSERT 0 1

testdb=# SELECT * FROM users WHERE username= 'ddimaria1d';
 id |  username  |  birthday
----+------------+------------
 50 | ddimaria1d | 2024-04-22
 51 | ddimaria1d | 2024-04-22
(2 sat²r)

testdb=# ALTER TABLE users ADD CONSTRAINT unique_username UNIQUE(username);
ALTER TABLE
testdb=# UPDATE users SET username ='Pincuss' WHERE id=51;
UPDATE 1

--Bu kısıtı güncelledikten sonra aynı veri yüklemeye çalıştığımızda hata veriyorsa sorun yok.
testdb=# insert into users (id, username, birthday) values (51, 'ddimaria1d', '2024-04-22');
ERROR:  duplicate key value violates unique constraint "users_pkey"
AYRINTI:  Key (id)=(51) already exists.
testdb=#

--https://www.postgresqltutorial.com/postgresql-administration/psql-commands/
